// создает массив интов / булов
// принимает строки типа "1011" -> [true, false, true, true], "123 12 1" -> [123, 12, 1]
class ArrayExtension{
    field Array array;

    constructor ArrayExtension newBigIntArray(String str){ // "123 12 1" -> [123, 12, 1]
        var int i, count, arrayLen, strLen, a;
        var String strForInts;

        // проходимся по строке, считаем количество элементов (длину будущего массива)
        let arrayLen = 1;
        let strLen = str.length();
        let i = 0;
        while (i < strLen){
            if (str.charAt(i) = 32){
                let arrayLen = arrayLen + 1;
            }
            let i = i + 1;
        }
        let array = Array.new(arrayLen); // длина - число пробелов + 1
        
        // i - счетчик для исходной строки, count - для массива
        // разбиваем строку по пробелам, добавляем в массив интовое значение
        let i = 0;
        let count = 0;
        let strForInts = String.new(10);
        while (i < strLen){
            if (~(str.charAt(i) = 32)){
                do strForInts.appendChar(str.charAt(i));
                let i = i + 1;
            } else {
                let a = strForInts.intValue();
                let array[count] = a;
                let count = count + 1;
                let i = i + 1;
                do strForInts.dispose();
                let strForInts = String.new(10);
            }
        }

        let a = strForInts.intValue();
        let array[count] = a;
        do strForInts.dispose();
        do str.dispose();
        return this;
    }

    constructor ArrayExtension newNotReallyBooleanArray(String str){ // "1011" -> [1, 0, 1, 1]
        var int i;
        let i = str.length() - 1;
        let array = Array.new(i + 1);
        while (i > -1){
            if (str.charAt(i) = 48){ // ascii 0
                let array[i] = 0;
            }
            if (str.charAt(i) = 49) { // ascii 1
                let array[i] = 1;
            }
            let i = i - 1;
        }
        do str.dispose();
        return this;
    }

    method Array array(){
        return array;
    }

    method void dispose(){
        do array.dispose();
        do Memory.deAlloc(this);
        return;
    }
}